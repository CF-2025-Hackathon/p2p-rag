services:
  laravel.test:
    build:
      context: ./vendor/laravel/sail/runtimes/8.4
      dockerfile: Dockerfile
      args:
        WWWGROUP: '${WWWGROUP}'
    image: sail-8.4/app
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - '${APP_PORT:-80}:80'
      - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
    environment:
      WWWUSER: '${WWWUSER}'
      LARAVEL_SAIL: 1
      XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
      XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
      IGNITION_LOCAL_SITES_PATH: '${PWD}'
    volumes:
      - '.:/var/www/html'
    networks:
      - sail
    depends_on:
      - mysql
      - pgsql
  #            - open-webui
  mysql:
    image: 'mysql/mysql-server:8.0'
    ports:
      - '${FORWARD_DB_PORT:-3306}:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - 'sail-mysql:/var/lib/mysql'
      - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
    networks:
      - sail
    healthcheck:
      test:
        - CMD
        - mysqladmin
        - ping
        - '-p${DB_PASSWORD}'
      retries: 3
      timeout: 5s
  #    pgsql:
  #        image: 'postgres:17'
  #        ports:
  #            - '${FORWARD_DB_PORT:-5432}:5432'
  #        environment:
  #            PGPASSWORD: '${DB_PASSWORD:-secret}'
  #            POSTGRES_DB: '${DB_DATABASE}'
  #            POSTGRES_USER: '${DB_USERNAME}'
  #            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
  #        volumes:
  #            - 'sail-pgsql:/var/lib/postgresql/data'
  #            - './vendor/laravel/sail/database/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
  #        networks:
  #            - sail
  #        healthcheck:
  #            test:
  #                - CMD
  #                - pg_isready
  #                - '-q'
  #                - '-d'
  #                - '${DB_DATABASE}'
  #                - '-U'
  #                - '${DB_USERNAME}'
  #            retries: 3
  #            timeout: 5s
  pgsql:
    image: supabase/postgres:17.0.1.047-orioledb
    ports:
      - "5432:5432"
    environment:
      PGPASSWORD: '${DB_PASSWORD:-secret}'
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
    volumes:
      - 'sail-pgsql:/var/lib/postgresql/data'
      - './vendor/laravel/sail/database/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
    networks:
      - sail
  pgadmin:
    image: dpage/pgadmin4
    container_name: sail-pgadmin
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: password
    depends_on:
      - pgsql
    networks:
      - sail
  ollama:
    image: ollama/ollama:0.6.1
    ports:
      - 7869:11434
    volumes:
      - .:/code
      - ./ollama/ollama:/root/.ollama
    container_name: ollama
    pull_policy: always
    tty: true
    restart: always
    environment:
      - OLLAMA_KEEP_ALIVE=24h
      - OLLAMA_HOST=0.0.0.0
    networks:
      - sail
#    open-webui:
#        image: ghcr.io/open-webui/open-webui:latest
#        container_name: open-webui
#        volumes:
#            - open-webui:/app/backend/data
#        depends_on:
#            - ollama
#        ports:
#            - "3001:8080"
#        environment:
#            - 'OLLAMA_BASE_URL=http://ollama:11434'
#            - 'OLLAMA_API_BASE_URL=http://ollama:11434'
#            - 'WEBUI_SECRET_KEY='
#        extra_hosts:
#            - host.docker.internal:host-gateway
#        networks:
#            - sail
#        restart: unless-stopped
networks:
  sail:
    driver: bridge
volumes:
  sail-mysql:
    driver: local
  sail-pgsql:
    driver: local
#    open-webui: {}
